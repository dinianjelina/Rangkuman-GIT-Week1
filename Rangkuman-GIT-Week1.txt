GIT-Intro
-Version Control System merupakan sistem yang menyimpan dan mengelola perubahan dari source code.
-GIT merupakan salah satu dari version control system tersebut.
-GIT merupakan software untuk mengelola dan menyimpan perubahan file dalam folder (repository/repo).
-Manfaat GIT: \Menyimpan rekaman perubahan pada source code
              \Memudahkan dalam berkolaborasi mengerjakan project web
              \Mengetahui siapa dan kapan dilakukan perubahan file
              \Dapat kembali ke kondisi sebelum dilakukan perubahan (checkout)
\\GITHUB
-GITHUB merupakan Layanan cloud untuk menyimpan dan mengelola repository/repo.
-Secara fungsi, GITHUB sama dengan GIT. Hanya saja, GITHUB terhubung dengan internet sehingga cakupan kerja lebih luas.
-Cakupan kerja lebih luas dalam artian:
    /Repository dari GITHUB dapat di-cloning ke banyak client sehingga bisa dilakukan perubahan file melalui perangkat yang lain.
    /Memungkinkan pengguna GITHUB yang lain untuk melihat dan melakukan perubahan pada repository yang dibuat (Forking)
\\Istilah GIT
-Repository/repo: folder project
-Commit: rekaman/snapshot perubahan dari repo
-hash: penanda commit (berupa angka random)
-checkout: perintah untuk berpindah ke sebuah commit
-branch: cabang bebas dari commit
-merge: perintah untuk menggabungkan branch
-remote: sumber yang memiliki repo
-clone: mengambil repo dari commit
-push: mengirimkan commit ke repo
-pull: mengambil commit dari repo

GIT-Fundamental
Perintah-perintah dasar untuk mengoperasikan GIT
-git init: untuk menginisialisasi repo
-git config: untuk mengonfigurasi email dan username
-git status: untuk mengetahui status file berupa untracked (file belum terbaca oleh GIT), stagging area (file yang siap di-commit), modified (file yang dilakukan perubahan)
-git add . : umtuk memasukkan file ke stagging area
-git commit: untuk mencatat perubahan file
-git log: untuk melihat riwayat commit
-git clone: untuk meng-copy repo dari server
-git remote: interaksi dari client ke server (repo)
-git push: untuk mengirim commit ke server
-git pull: untuk mengambil commit dari server

Branch
-Branch merupakan cabang dari repo yang bersifat independen.
-Branch digunakan ketika ingin menambahkan fitur baru pada repo tanpa mengganggu file master.
//Perintah Branch
-git branch: untuk melihat semua branch (local)
-git branch --all: untuk melihat semua branch (public)
-git branch nama_branch: untuk membuat branch baru
-git checkout nama_branch: untuk berpindah ke sebuah branch
-git -d nama_branch: untuk menghapus branch
-git merge nama_branch: untuk menggabungkan commit dari 2 branch
//Conflict
Conflict terjadi ketika melakukan merging terdapat perubahan file yang sama. Ketika terjadi conflict maka tidak bisa dilakukan commit sehingga conflict harus diselesaikan terlebih dahulu.

